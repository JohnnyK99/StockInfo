@inject NavigationManager navigationManager
@inject HttpClient httpClient

@using Radzen 
@using Radzen.Blazor

<RadzenAutoComplete @bind-Value="_selected" Data="@tickers" TextProperty="@nameof(TickerName.ToString)" LoadData="Search" Change="Redirect2" Placeholder="Wyszukaj..."  />

@code {
    private string _selected;
    private List<TickerName> tickers = new List<TickerName>();
    private bool _isLoaded = false;

    private async Task Search(LoadDataArgs args)
    {
        if (string.IsNullOrEmpty(args.Filter))
        {
            tickers = null;
        }
        else
        {
            var response = await httpClient.GetAsync($"api/tickers?filter={args.Filter}");
            Console.WriteLine("Liczba rekordów: " + tickers.Count);

            if (response.IsSuccessStatusCode)
            {
                tickers = JsonConvert.DeserializeObject<List<TickerName>>(await response.Content.ReadAsStringAsync());
            }
            else
            {
                tickers = null;
            }
        }
        await InvokeAsync(StateHasChanged);
    }

    private void Redirect(TickerName ticker)
    {
        navigationManager.NavigateTo($"tickers/{ticker.Symbol}");
    }

    private void Redirect2()
    {
        //workaround for the components unexpected behavior: calling the Change event twice
        if (_selected.Contains("|"))
        {
            //Console.WriteLine("Redirecting to: " + _selected.Split("|")[0].ToUpper());
            navigationManager.NavigateTo($"/tickers/{_selected.Split(" | ")[0].ToUpper()}");
        }
    }
}