@page "/tickers/saved"

@inject AuthenticationStateProvider authentication
@inject NavigationManager navigationManager 
@inject HttpClient httpClient

<h3>Saved Stocks</h3>

@if (stocks == null)
{
    <p>Loading...</p>
}
else
{
    <RadzenDataGrid TItem="StockDetails" Data="stocks" SelectionMode="Radzen.DataGridSelectionMode.Single" EmptyText="Brak rekordów do wyświetlenia" RowSelect="Redirect">
        <Columns>
            <RadzenDataGridColumn TItem="StockDetails" Title="Symbol" Width="100px" CssClass="text-center">
                <Template Context="data">
                    <img src="@($"https://eodhistoricaldata.com/img/logos/US/{data.Ticker}.png")" onerror="this.onerror = null; this.src = 'no_image.jpg';" style="height: 50px;"/>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="StockDetails" Title="Nazwa" Property="@nameof(StockDetails.Name)" />
            <RadzenDataGridColumn TItem="StockDetails" Title="Kraj" Property="@nameof(StockDetails.Country)"/>
            <RadzenDataGridColumn TItem="StockDetails" Title="Przemysł" Property="@nameof(StockDetails.Industry)"/>
            <RadzenDataGridColumn TItem="StockDetails" Title="Sektor" Property="@nameof(StockDetails.Sector)"/>
        </Columns>
    </RadzenDataGrid>
}

@code {
    //TODO: Add filtering, sorting, showing logo images and navigating to selected stock
    //TODO: Add toast message when failed to fetch stocks
    private string username;
    private List<StockDetails> stocks;
    private List<StockDetails> selectedStocks;

    protected override async Task OnInitializedAsync()
    {
        var identity = await authentication.GetAuthenticationStateAsync();

        username = identity.User.Identity.Name;

        var response = await httpClient.GetAsync($"api/tickers/saved?username={username}");

        if (response.IsSuccessStatusCode)
        {
            stocks = JsonConvert.DeserializeObject<List<StockDetails>>(await response.Content.ReadAsStringAsync());
        }
    }

    private void Redirect(object Stock)
    {
        var ticker = ((StockDetails)Stock).Ticker;
        navigationManager.NavigateTo($"/tickers/{ticker}");
    }
}